# Kind-optimized version matching customer's core Kyverno configuration
# Based on customer's values.yaml with infrastructure settings removed for Kind testing

# Global settings - keep minimal for Kind
global:
  image:
    registry: ~  # Use default registries

# Required template configurations
customLabels: {}

test:
  image:
    registry: ~
    repository: busybox
    tag: latest
    pullPolicy: IfNotPresent
  resources: {}
  securityContext: {}
  sleep: 30

templating:
  enabled: false

# CRDs configuration - EXACT MATCH to customer's settings
crds:
  install: true
  groups:
    kyverno:
      cleanuppolicies: true
      clustercleanuppolicies: true
      clusterpolicies: true
      globalcontextentries: true
      policies: true
      policyexceptions: true
      updaterequests: true
    # CUSTOMER'S EXACT CRD EXCLUSIONS
    reports:
      clusterephemeralreports: false
      ephemeralreports: false
    wgpolicyk8s:
      clusterpolicyreports: false
      policyreports: false
  reportsServer:
    enabled: true

# Configuration - EXACT MATCH to customer's settings
config:
  create: true
  excludeGroups:
    - system:nodes
  resourceFilters:
    - '[Event,*,*]'
    - '[*/*,kube-system,*]'
    - '[*/*,kube-public,*]'
    - '[*/*,kube-node-lease,*]'

# Features - EXACT MATCH to customer's settings
features:
  admissionReports:
    enabled: true
  aggregateReports:
    enabled: true
  policyReports:
    enabled: true
  reporting:
    validate: true
    mutate: true
    mutateExisting: true
    imageVerify: true
    generate: true

# Admission controller - Kind optimized but keeping core config
admissionController:
  rbac:
    create: true
  replicas: 1  # Reduced for Kind
  resources:
    limits:
      cpu: 500m      # Reduced for Kind
      memory: 512Mi  # Reduced for Kind
    requests:
      cpu: 100m      # Reduced for Kind
      memory: 64Mi   # Reduced for Kind
  priorityClassName: ""  # Remove for Kind
  service:
    port: 443
    type: ClusterIP
  metricsService:
    create: true
    port: 8000
    type: ClusterIP
  serviceMonitor:
    enabled: false
  rbac:
    create: true

# Background controller - Kind optimized but keeping core config
backgroundController:
  enabled: true
  rbac:
    create: true
  replicas: 1  # Reduced for Kind
  resources:
    limits:
      cpu: 500m      # Reduced for Kind
      memory: 512Mi  # Reduced for Kind
    requests:
      cpu: 50m       # Reduced for Kind
      memory: 32Mi   # Reduced for Kind
  priorityClassName: ""  # Remove for Kind
  service:
    port: 8080
    type: ClusterIP
  metricsService:
    create: true
    port: 8000
    type: ClusterIP
  serviceMonitor:
    enabled: false
  rbac:
    create: true

# Cleanup controller - Kind optimized but keeping core config
cleanupController:
  enabled: true
  rbac:
    create: true
  replicas: 1  # Reduced for Kind
  resources:
    limits:
      cpu: 500m      # Reduced for Kind
      memory: 256Mi  # Reduced for Kind
    requests:
      cpu: 50m       # Reduced for Kind
      memory: 32Mi   # Reduced for Kind
  priorityClassName: ""  # Remove for Kind
  service:
    port: 9443
    type: ClusterIP
  metricsService:
    create: true
    port: 8000
    type: ClusterIP
  serviceMonitor:
    enabled: false
  rbac:
    create: true

# Reports controller - EXACT MATCH to customer's critical setting
reportsController:
  enabled: true
  # CRITICAL: Customer's exact sanity check setting - THE KEY CONFIGURATION WE'RE TESTING
  sanityChecks: false
  rbac:
    create: true
  replicas: 1  # Reduced for Kind
  resources:
    limits:
      cpu: 500m      # Reduced for Kind
      memory: 512Mi  # Reduced for Kind
    requests:
      cpu: 50m       # Reduced for Kind
      memory: 32Mi   # Reduced for Kind
  priorityClassName: ""  # Remove for Kind
  service:
    port: 443
    type: ClusterIP
  metricsService:
    create: true
    port: 8000
    type: ClusterIP
  serviceMonitor:
    enabled: false
  rbac:
    create: true

# Reports server - EXACT MATCH to customer's settings but Kind optimized
reports-server:
  enabled: true
  replicaCount: 1
  priorityClassName: ""  # Remove for Kind
  resources:
    limits:
      cpu: 500m      # Reduced for Kind
      memory: 512Mi  # Reduced for Kind
    requests:
      cpu: 100m      # Reduced for Kind
      memory: 128Mi  # Reduced for Kind
  config:
    etcd:
      enabled: true
      storage: 1Gi     # Reduced for Kind
      quotaBackendBytes: 1073741824  # 1GB for Kind
    db:
      host: reports-server-cluster-rw.reports-server
      name: reportsdb
      user: app
      password: password
      sslmode: disable
  cloudnative-pg:
    crds:
      create: false

# Disable resource-intensive features for Kind
grafana:
  enabled: false

networkPolicy:
  enabled: false 